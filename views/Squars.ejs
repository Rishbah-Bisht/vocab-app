<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Math Quiz – Squares & Cubes</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary: #4361ee;
            --primary-light: #4895ef;
            --primary-dark: #3f37c9;
            --success: #4cc9f0;
            --error: #f72585;
            --warning: #f8961e;
            --light: #f8f9fa;
            --dark: #212529;
            --gray: #6c757d;
            --light-gray: #e9ecef;
            --border-radius: 12px;
            --box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            --transition: all 0.3s ease;
            --card-bg: #ffffff;
        }

        * {
            box-sizing: border-box;
        }

       
        .quiz-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .quiz-header {
            text-align: center;
            margin-bottom: 2rem;
        }

        h1 {
            margin-bottom: 0.5rem;
            color: var(--primary);
            font-size: clamp(1.8rem, 4vw, 2.5rem);
            font-weight: 700;
        }

        .subtitle {
            color: var(--gray);
            margin-bottom: 1.5rem;
            font-size: 1.1rem;
            max-width: 600px;
            margin-left: auto;
            margin-right: auto;
        }

        .quiz-card {
            display: flex;
            flex-direction: column;
            background: var(--card-bg);
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            overflow: hidden;
            margin-bottom: 2rem;
        }

        @media (min-width: 992px) {
            .quiz-card {
                flex-direction: row;
            }
        }

        .quiz-content {
            flex: 1;
            padding: 2rem;
        }

        .stats-panel {
            background: var(--light);
            padding: 1.5rem;
            border-left: 1px solid var(--light-gray);
        }

        @media (min-width: 992px) {
            .stats-panel {
                width: 300px;
            }
        }

        @media (max-width: 991px) {
            .stats-panel {
                border-top: 1px solid var(--light-gray);
                border-left: none;
            }
        }

        .controls {
            display: flex;
            flex-wrap: wrap;
            gap: 1rem;
            justify-content: center;
            margin-bottom: 2rem;
        }

        .mode-select {
            display: flex;
            gap: 0.5rem;
        }

        .mode-btn {
            padding: 0.75rem 1.5rem;
            font-size: 1rem;
            font-weight: 600;
            border: none;
            border-radius: var(--border-radius);
            cursor: pointer;
            transition: var(--transition);
            background-color: var(--light);
            color: var(--dark);
            border: 2px solid var(--primary-light);
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .mode-btn.active {
            background-color: var(--primary);
            color: white;
            border-color: var(--primary);
        }

        .mode-btn:hover:not(.active) {
            background-color: var(--primary-light);
            color: white;
        }

        .order-select {
            padding: 0.75rem 1rem;
            font-size: 1rem;
            border: 2px solid var(--primary-light);
            border-radius: var(--border-radius);
            background-color: white;
            color: var(--dark);
            cursor: pointer;
            transition: var(--transition);
        }

        .order-select:hover {
            border-color: var(--primary);
        }

        .question-box {
            font-size: 1.5rem;
            text-align: center;
            margin-bottom: 2rem;
            padding: 1.5rem;
            background-color: rgba(67, 97, 238, 0.05);
            border-radius: var(--border-radius);
            font-weight: 600;
            border-left: 4px solid var(--primary);
            box-shadow: var(--box-shadow);
        }

        .options-grid {
            display: grid;
            grid-template-columns: repeat(2, 1fr);
            gap: 1rem;
            margin-bottom: 2rem;
        }

        @media (max-width: 768px) {
            .options-grid {
                grid-template-columns: 1fr;
            }
        }

        .option {
            padding: 1.5rem;
            background-color: white;
            border: 2px solid var(--light-gray);
            border-radius: var(--border-radius);
            cursor: pointer;
            transition: var(--transition);
            font-size: 1.1rem;
            font-weight: 500;
            display: flex;
            align-items: center;
            justify-content: center;
            min-height: 60px;
            position: relative;
            box-shadow: var(--box-shadow);
        }

        .option:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
            border-color: var(--primary-light);
        }

        .option.correct {
            background-color: rgba(76, 201, 240, 0.1);
            border-color: var(--success);
            color: #155724;
        }

        .option.correct::after {
            content: "✓";
            position: absolute;
            right: 15px;
            color: var(--success);
            font-weight: bold;
            font-size: 1.2rem;
        }

        .option.wrong {
            background-color: rgba(247, 37, 133, 0.1);
            border-color: var(--error);
            color: #721c24;
        }

        .option.wrong::after {
            content: "✗";
            position: absolute;
            right: 15px;
            color: var(--error);
            font-weight: bold;
            font-size: 1.2rem;
        }

        .feedback {
            text-align: center;
            font-size: 1.2rem;
            font-weight: 600;
            margin: 1rem 0;
            padding: 1rem;
            border-radius: var(--border-radius);
            animation: fadeIn 0.4s ease-out;
            display: none;
        }

        .feedback.correct {
            color: var(--success);
            background-color: rgba(76, 201, 240, 0.1);
             display: none;
        }

        .feedback.wrong {
            color: var(--error);
            background-color: rgba(247, 37, 133, 0.1);
            display: none;
        }

        .action-buttons {
            display: flex;
            justify-content: center;
            gap: 1rem;
            margin-top: 2rem;
            flex-wrap: wrap;
        }

        .btn {
            padding: 0.8rem 2rem;
            font-size: 1rem;
            font-weight: 600;
            border: none;
            border-radius: var(--border-radius);
            cursor: pointer;
            transition: var(--transition);
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .btn-primary {
            background-color: var(--primary);
            color: white;
        }

        .btn-primary:hover {
            background-color: var(--primary-dark);
            transform: translateY(-2px);
            box-shadow: var(--box-shadow);
        }

        .btn-primary:disabled {
            background-color: #cccccc;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }

        .btn-secondary {
            background-color: white;
            color: var(--primary);
            border: 2px solid var(--primary);
        }

        .btn-secondary:hover {
            background-color: var(--primary-light);
            color: white;
            transform: translateY(-2px);
            box-shadow: var(--box-shadow);
        }

        .stats-card {
            background-color: white;
            border-radius: var(--border-radius);
            padding: 1.5rem;
            box-shadow: var(--box-shadow);
            margin-bottom: 1.5rem;
        }

        .stats-title {
            font-size: 1.2rem;
            font-weight: 600;
            margin-bottom: 1rem;
            color: var(--primary);
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .stat-item {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 0.8rem;
            padding: 0.8rem;
            border-radius: 8px;
            background-color: var(--light);
        }

        .stat-label {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .stat-icon {
            font-size: 1rem;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
        }

        .total-icon {
            background-color: rgba(67, 97, 238, 0.1);
            color: var(--primary);
        }

        .correct-icon {
            background-color: rgba(76, 201, 240, 0.1);
            color: var(--success);
        }

        .wrong-icon {
            background-color: rgba(247, 37, 133, 0.1);
            color: var(--error);
        }

        .stat-value {
            font-weight: 700;
        }

        .progress-container {
            margin-top: 1.5rem;
        }

        .progress-label {
            display: flex;
            justify-content: space-between;
            margin-bottom: 0.5rem;
            font-size: 0.9rem;
            color: var(--gray);
        }

        .progress-bar {
            width: 100%;
            height: 10px;
            background-color: var(--light-gray);
            border-radius: 5px;
            overflow: hidden;
        }

        .progress-fill {
            height: 100%;
            background: linear-gradient(90deg, var(--primary) 0%, var(--primary-light) 100%);
            border-radius: 5px;
            transition: width 0.4s ease;
        }

        .summary {
            background-color: white;
            border-radius: var(--border-radius);
            padding: 2rem;
            box-shadow: var(--box-shadow);
            margin-top: 2rem;
            display: none;
        }

        .summary-title {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--primary);
            margin-bottom: 1.5rem;
            text-align: center;
        }

        .perfect-score {
            text-align: center;
            padding: 2rem;
            color: var(--success);
            font-size: 1.2rem;
            font-weight: 600;
        }

        .mistakes-list {
            list-style-type: none;
            padding: 0;
            margin: 0 0 2rem 0;
        }

        .mistake-item {
            padding: 1rem;
            margin-bottom: 0.5rem;
            background-color: var(--light);
            border-radius: var(--border-radius);
            border-left: 4px solid var(--error);
        }

        .mistake-question {
            font-weight: 600;
            margin-bottom: 0.5rem;
        }

        .mistake-answer {
            display: flex;
            gap: 1rem;
        }

        .your-answer {
            color: var(--error);
        }

        .correct-answer {
            color: var(--success);
        }

        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Responsive adjustments */
        @media (max-width: 768px) {
            .quiz-content {
                padding: 1.5rem;
            }

            .question-box {
                font-size: 1.2rem;
                padding: 1rem;
            }

            .option {
                padding: 1rem;
                min-height: 50px;
                font-size: 1rem;
            }

            .mode-select {
                width: 100%;
                justify-content: center;
            }

            .controls {
                flex-direction: column;
                align-items: center;
            }
        }

        @media (max-width: 480px) {
            .quiz-container {
                padding: 15px;
            }

            .quiz-content {
                padding: 1.25rem;
            }

            .btn {
                width: 100%;
                justify-content: center;
            }
        }
    </style>
</head>
<body>
      <%- include('./partial/nav-bar', { currentPage: 'squars' }) %>

    <div class="quiz-container">
        <div class="quiz-header">
            <h1>Squares & Cubes Quiz</h1>
            
        </div>

        <div class="controls">
            <div class="mode-select">
                <button class="mode-btn active" onclick="setMode('square', this)">
                    <i class="fas fa-square"></i> Squares
                </button>
                <button class="mode-btn" onclick="setMode('cube', this)">
                    <i class="fas fa-cube"></i> Cubes
                </button>
            </div>
            
            <select class="order-select" id="orderSelect" onchange="setOrder(this.value)">
                <option value="random">Random Order</option>
                <option value="sequence">Sequential Order</option>
            </select>
        </div>

        <div class="quiz-card">
            <div class="quiz-content">
                <div class="question-box" id="question">Loading question...</div>
                
                <div class="options-grid" id="options"></div>
                
                <div class="feedback" id="feedback"></div>
                
                <div class="action-buttons">
                    <button class="btn btn-primary" id="nextBtn" onclick="loadQuestion()" disabled>
                        <i class="fas fa-arrow-right"></i> Next Question
                    </button>
                    <button class="btn btn-secondary" onclick="endQuiz()">
                        <i class="fas fa-stop"></i> End Quiz
                    </button>
                </div>
                
                <div class="summary" id="summary">
                    <!-- Summary content will be inserted here -->
                </div>
            </div>
            
            <div class="stats-panel">
                <div class="stats-card">
                    <div class="stats-title">
                        <i class="fas fa-chart-bar"></i> Quiz Stats
                    </div>
                    
                    <div class="stat-item">
                        <div class="stat-label">
                            <div class="stat-icon total-icon">
                                <i class="fas fa-question"></i>
                            </div>
                            <span>Questions</span>
                        </div>
                        <span class="stat-value" id="totalQuestions">0</span>
                    </div>
                    
                    <div class="stat-item">
                        <div class="stat-label">
                            <div class="stat-icon correct-icon">
                                <i class="fas fa-check"></i>
                            </div>
                            <span>Correct</span>
                        </div>
                        <span class="stat-value" id="correctAnswers">0</span>
                    </div>
                    
                    <div class="stat-item">
                        <div class="stat-label">
                            <div class="stat-icon wrong-icon">
                                <i class="fas fa-times"></i>
                            </div>
                            <span>Wrong</span>
                        </div>
                        <span class="stat-value" id="wrongAnswers">0</span>
                    </div>
                    
                    <div class="progress-container">
                        <div class="progress-label">
                            <span>Progress</span>
                            <span id="progressText">0%</span>
                        </div>
                        <div class="progress-bar">
                            <div class="progress-fill" id="progressBar" style="width: 0%"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        const squares = Array.from({ length: 50 }, (_, i) => ({ num: i + 1, value: (i + 1) ** 2 }));
        const cubes = Array.from({ length: 30 }, (_, i) => ({ num: i + 1, value: (i + 1) ** 3 }));

        let mode = 'square';
        let order = 'random';
        let dataset = [];
        let index = 0;
        let asked = [];
        let questionList = [];
        let currentQuestion = null;
        const wrongAnswers = [];
        let correctCount = 0;
        let wrongCount = 0;

        const questionEl = document.getElementById("question");
        const optionsEl = document.getElementById("options");
        const feedbackEl = document.getElementById("feedback");
        const nextBtn = document.getElementById("nextBtn");
        const summaryEl = document.getElementById("summary");
        const totalQuestionsEl = document.getElementById("totalQuestions");
        const correctAnswersEl = document.getElementById("correctAnswers");
        const wrongAnswersEl = document.getElementById("wrongAnswers");
        const progressBar = document.getElementById("progressBar");
        const progressText = document.getElementById("progressText");

        function shuffle(arr) {
            return arr.sort(() => Math.random() - 0.5);
        }

        function setMode(newMode, btn) {
            mode = newMode;
            document.querySelectorAll('.mode-btn').forEach(b => b.classList.remove('active'));
            btn.classList.add('active');
            resetQuiz();
        }

        function setOrder(newOrder) {
            order = newOrder;
            resetQuiz();
        }

        function updateStats() {
            totalQuestionsEl.textContent = asked.length;
            correctAnswersEl.textContent = correctCount;
            wrongAnswersEl.textContent = wrongCount;
            
            const totalQuestions = mode === 'square' ? 50 : 30;
            const progress = (index / totalQuestions) * 100;
            progressBar.style.width = `${progress}%`;
            progressText.textContent = `${Math.round(progress)}%`;
        }

        function resetQuiz() {
            dataset = mode === 'square' ? squares.slice() : cubes.slice();
            questionList = order === 'random' ? shuffle(dataset.slice()) : dataset.slice();
            index = 0;
            asked = [];
            wrongAnswers.length = 0;
            correctCount = 0;
            wrongCount = 0;
            summaryEl.style.display = 'none';
            summaryEl.innerHTML = '';
            nextBtn.style.display = 'flex';
            updateStats();
            loadQuestion();
        }

        function loadQuestion() {
            if (index >= questionList.length) return endQuiz();

            optionsEl.innerHTML = '';
            feedbackEl.textContent = '';
            feedbackEl.className = 'feedback';
            nextBtn.disabled = true;

            currentQuestion = questionList[index];
            index++;
            asked.push(currentQuestion);

            const label = mode === 'square' ? 'square' : 'cube';
            questionEl.textContent = `What number's ${label} is ${currentQuestion.value}?`;

            const correct = currentQuestion.num;
            const options = new Set([correct]);
            while (options.size < 4) {
                const max = mode === 'square' ? 50 : 30;
                options.add(Math.floor(Math.random() * max) + 1);
            }

            shuffle([...options]).forEach(opt => {
                const btn = document.createElement("div");
                btn.className = "option";
                btn.textContent = opt;
                btn.onclick = () => checkAnswer(opt, btn);
                optionsEl.appendChild(btn);
            });
            
            updateStats();
        }

        function checkAnswer(selected, btn) {
            const correct = currentQuestion.num;
            const all = document.querySelectorAll(".option");
            all.forEach(o => o.onclick = null); // disable all options

            if (selected === correct) {
                btn.classList.add("correct");
                feedbackEl.textContent = "✅ Correct! Well done!";
                feedbackEl.classList.add("correct");
                correctCount++;
            } else {
                btn.classList.add("wrong");
                feedbackEl.textContent = `❌ Incorrect! The correct answer is ${correct}.`;
                feedbackEl.classList.add("wrong");
                wrongCount++;
                wrongAnswers.push({
                    value: currentQuestion.value,
                    correct,
                    selected,
                    type: mode
                });
                all.forEach(o => {
                    if (parseInt(o.textContent) === correct) o.classList.add("correct");
                });
            }

            nextBtn.disabled = false;
            updateStats();
        }

        function endQuiz() {
            questionEl.innerHTML = `<i class="fas fa-trophy" style="color: var(--primary);"></i> Quiz Complete!`;
            optionsEl.innerHTML = '';
            feedbackEl.textContent = '';
            feedbackEl.className = 'feedback';
            nextBtn.style.display = "none";
            
            const totalQuestions = asked.length;
            const percentage = Math.round((correctCount / totalQuestions) * 100);

            if (wrongAnswers.length === 0) {
                summaryEl.style.display = 'block';
                summaryEl.innerHTML = `
                    <div class="perfect-score">
                        <i class="fas fa-star" style="font-size: 3rem; color: var(--warning); margin-bottom: 1rem;"></i>
                        <h3>Perfect Score!</h3>
                        <p>You answered all ${totalQuestions} questions correctly!</p>
                        <button class="btn btn-primary" onclick="resetQuiz()" style="margin-top: 1rem;">
                            <i class="fas fa-redo"></i> Try Again
                        </button>
                    </div>
                `;
                return;
            }

            const list = wrongAnswers.map((w, i) => `
                <li class="mistake-item">
                    <div class="mistake-question">
                        ${w.type.toUpperCase()} of ${w.correct} = ${w.value}
                    </div>
                    <div class="mistake-answer">
                        <span>Your answer: <span class="your-answer">${w.selected}</span></span>
                        <span>Correct answer: <span class="correct-answer">${w.correct}</span></span>
                    </div>
                </li>`).join("");

            summaryEl.style.display = 'block';
            summaryEl.innerHTML = `
                <h3 class="summary-title">Quiz Summary</h3>
                <p style="text-align: center; margin-bottom: 1.5rem;">
                    You scored ${correctCount} out of ${totalQuestions} (${percentage}%)
                </p>
                
                <h4 style="color: var(--error); margin-bottom: 1rem;">
                    <i class="fas fa-exclamation-circle"></i> Mistakes to Review (${wrongAnswers.length})
                </h4>
                <ul class="mistakes-list">${list}</ul>
                
                <div style="text-align: center; margin-top: 2rem;">
                    <button class="btn btn-primary" onclick="resetQuiz()">
                        <i class="fas fa-redo"></i> Try Again
                    </button>
                </div>
            `;
        }

        // Initialize the quiz
        resetQuiz();
    </script>
</body>
</html>